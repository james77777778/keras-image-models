[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "kimm"
description = "A Keras model zoo with pretrained weights."
keywords = [
    "deep-learning",
    "model-zoo",
    "keras",
    "jax",
    "tensorflow",
    "torch",
    "imagenet",
    "pretrained-weights",
    "timm",
]
authors = [{ name = "Hong-Yu Chiu", email = "james77777778@gmail.com" }]
maintainers = [{ name = "Hong-Yu Chiu", email = "james77777778@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Apache License 2.0" }
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
]
dynamic = ["version"]
dependencies = ["keras"]

[project.urls]
Homepage = "https://github.com/james77777778/keras-image-models"
Documentation = "https://github.com/james77777778/keras-image-models"
Repository = "https://github.com/james77777778/keras-image-models.git"
Issues = "https://github.com/james77777778/keras-image-models/issues"

[project.optional-dependencies]
tests = [
    # export
    "tf2onnx",
    "onnx",
    "onnxoptimizer",
    "onnxsim",
    # linter and formatter
    "isort",
    "ruff",
    "black",
    "pytest",
    "pytest-cov",
    "coverage",
    # tool
    "pre-commit",
    "namex",
]
examples = ["opencv-python", "matplotlib"]

[tool.setuptools.packages]
find = { include = ["kimm*"] }

[tool.setuptools.dynamic]
version = { attr = "kimm.__version__" }

[tool.black]
line-length = 80

[tool.ruff]
line-length = 80
lint.select = ["E", "W", "F"]
lint.isort.force-single-line = true
exclude = [
    ".venv",
    ".vscode",
    ".github",
    ".devcontainer",
    "venv",
    "__pycache__",
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]

[tool.isort]
profile = "black"
force_single_line = true
known_first_party = ["kimm"]
line_length = 80

[tool.pytest.ini_options]
addopts = "-vv --durations 10 --cov --cov-report html --cov-report term:skip-covered --cov-report xml"
testpaths = ["kimm"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::ImportWarning",
    "ignore::RuntimeWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning",
]

[tool.coverage.run]
source = ["kimm"]
omit = ["**/__init__.py", "*test*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract",
    "raise NotImplementedError",
    "raise ValueError",
]
